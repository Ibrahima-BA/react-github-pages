{"ast":null,"code":"var _jsxFileName = \"/Users/maciba/Desktop/test-react/client/src/components/DarkMode.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DarkMode() {\n  let clickedClass = \"clicked\";\n  const body = document.body;\n  const lightTheme = \"light\";\n  const darkTheme = \"dark\";\n  let theme;\n\n  const swithTheme = e => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"light\");\n      theme = lightTheme;\n    } else {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.add(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = lightTheme;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: theme === \"dark\" ? clickedClass : \"\",\n    id: \"darkMode\",\n    onClick: e => swithTheme(e),\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/Users/maciba/Desktop/test-react/client/src/components/DarkMode.js"],"names":["React","useState","DarkMode","clickedClass","body","document","lightTheme","darkTheme","theme","swithTheme","e","classList","replace","target","remove","localStorage","setItem","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,QAAT,GAAoB;AAClB,MAAIC,YAAY,GAAG,SAAnB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACA,QAAME,UAAU,GAAG,OAAnB;AACA,QAAMC,SAAS,GAAG,MAAlB;AACA,MAAIC,KAAJ;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIF,KAAK,KAAKD,SAAd,EAAyB;AACvBH,MAAAA,IAAI,CAACO,SAAL,CAAeC,OAAf,CAAuBL,SAAvB,EAAkCD,UAAlC;AACAI,MAAAA,CAAC,CAACG,MAAF,CAASF,SAAT,CAAmBG,MAAnB,CAA0BX,YAA1B;AACAY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAR,MAAAA,KAAK,GAAGF,UAAR;AACD,KALD,MAKO;AACLF,MAAAA,IAAI,CAACO,SAAL,CAAeC,OAAf,CAAuBN,UAAvB,EAAmCC,SAAnC;AACAG,MAAAA,CAAC,CAACG,MAAF,CAASF,SAAT,CAAmBM,GAAnB,CAAuBd,YAAvB;AACAY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAR,MAAAA,KAAK,GAAGF,UAAR;AACD;AACF,GAZD;;AAaA,sBACE;AACE,IAAA,SAAS,EAAEE,KAAK,KAAK,MAAV,GAAmBL,YAAnB,GAAkC,EAD/C;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,OAAO,EAAGO,CAAD,IAAOD,UAAU,CAACC,CAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KA7BQR,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nfunction DarkMode() {\n  let clickedClass = \"clicked\";\n  const body = document.body;\n  const lightTheme = \"light\";\n  const darkTheme = \"dark\";\n  let theme;\n\n  const swithTheme = (e) => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"light\");\n      theme = lightTheme;\n    } else {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.add(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = lightTheme;\n    }\n  };\n  return (\n    <button\n      className={theme === \"dark\" ? clickedClass : \"\"}\n      id=\"darkMode\"\n      onClick={(e) => swithTheme(e)}\n    >\n      test\n    </button>\n  );\n}\n\nexport default DarkMode;\n"]},"metadata":{},"sourceType":"module"}